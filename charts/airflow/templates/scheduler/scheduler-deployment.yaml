################################
## Airflow Scheduler Deployment/StatefulSet
#################################
{{- $local := or (eq .Values.executor "LocalExecutor") (eq .Values.executor "SequentialExecutor") }}
{{- $persistence := .Values.workers.persistence.enabled }}
kind: {{ if $local }}StatefulSet{{ else }}Deployment{{ end }}
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}-scheduler
  labels:
    tier: airflow
    component: scheduler
    release: {{ .Release.Name }}
    platform: {{ .Values.platform.release }}
    workspace: {{ .Values.platform.workspace | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    heritage: {{ .Release.Service }}
    local: {{ $local | quote }}
spec:
{{- if $local }}
  serviceName: {{ .Release.Name }}-scheduler
{{- end }}
  replicas: 1
  selector:
    matchLabels:
      tier: airflow
      component: scheduler
      release: {{ .Release.Name }}
      platform: {{ .Values.platform.release }}
      workspace: {{ .Values.platform.workspace | quote }}
      local: {{ $local | quote }}
  template:
    metadata:
      labels:
        tier: airflow
        component: scheduler
        release: {{ .Release.Name }}
        platform: {{ .Values.platform.release }}
        workspace: {{ .Values.platform.workspace | quote }}
        local: {{ $local | quote }}
      annotations:
        checksum/metadata-secret: {{ include (print $.Template.BasePath "/secrets/metadata-connection-secret.yaml") . | sha256sum }}
        checksum/result-backend-secret: {{ include (print $.Template.BasePath "/secrets/result-backend-connection-secret.yaml") . | sha256sum }}
        checksum/pgbouncer-config-secret: {{ include (print $.Template.BasePath "/secrets/pgbouncer-config-secret.yaml") . | sha256sum }}
    spec:
      restartPolicy: Always
    {{- if $local }}
      # terminationGracePeriodSeconds: {{ .Values.workers.terminationGracePeriodSeconds }}
      # Airflow scheduler with LocalExecutor doesn't handle SIGINT well. Hard-coding low
      # number for now.
      terminationGracePeriodSeconds: 10
    {{- end }}
      serviceAccountName: {{ .Release.Name }}-scheduler-serviceaccount
      securityContext:
        runAsUser: {{ .Values.uid }}
        fsGroup: {{ .Values.gid }}
      {{- if or .Values.registry.secretName .Values.registry.connection }}
      imagePullSecrets:
        - name: {{ template "registry_secret" . }}
      {{- end }}
      containers:
        - name: {{ .Release.Name }}-scheduler
          image: {{ template "airflow_image" . }}
          imagePullPolicy: {{ .Values.images.airflow.pullPolicy }}
          args: ["airflow", "scheduler"]
          resources:
{{ toYaml .Values.scheduler.resources | indent 12 }}
        {{- if $local }}
          volumeMounts:
            - name: logs
              mountPath: {{ template "airflow_logs" . }}
        {{- end }}
          env:
          {{- include "custom_airflow_environment" . | indent 10 }}
          {{- include "standard_airflow_environment" . | indent 10 }}
      {{- if $local }}
        - name: {{ .Release.Name }}-scheduler-logs
          image: {{ template "airflow_image" . }}
          args: ["airflow", "serve_logs"]
          ports:
            - name: worker-logs
              containerPort: {{ .Values.ports.workerLogs }}
          volumeMounts:
            - name: logs
              mountPath: {{ template "airflow_logs" . }}
          env:
          {{- include "custom_airflow_environment" . | indent 10 }}
          {{- include "standard_airflow_environment" . | indent 10 }}
        {{- if $persistence }}
        - name: {{ .Release.Name }}-worker-gc
          image: {{ template "airflow_image" . }}
          args: ["crond", "-f", "-d", "0"]
        {{- end }}
      {{- end }}
{{- if not $local }}
      volumes:
        - name: logs
          emptyDir: {}
          sizeLimit: {{ .Values.workers.persistence.size }}
{{- else if $persistence }}
  volumeClaimTemplates:
    - metadata:
        name: logs
      spec:
      {{- if .Values.workers.persistence.storageClassName }}
        storageClassName: {{ .Values.workers.persistence.storageClassName }}
      {{- end }}
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: {{ .Values.workers.persistence.size }}
{{- end }}
